import{b as s,o as a,w as u,g as e,ad as l,v as i,x as c,S as t}from"./modules/vue-CRs45FuU.js";import{I as d}from"./slidev/default-BPNQ_srZ.js";import{u as f,f as m}from"./slidev/context-D4xzpGZa.js";import"./index-DPD7zQwK.js";import"./modules/shiki-CvQuTaB8.js";const b={__name:"lect-9.md__slidev_11",setup(p){const{$clicksContext:o,$frontmatter:r}=f();return o.setup(),(h,n)=>(a(),s(d,i(c(t(m)(t(r),10))),{default:u(()=>n[0]||(n[0]=[e("h2",null,[l("Reading from Files: "),e("code",null,"fscanf()"),l(" and "),e("code",null,"fgets()")],-1),e("ul",null,[e("li",null,[e("strong",null,[e("code",null,"fscanf(FILE *fp, const char *format, ...)"),l(":")]),e("ul",null,[e("li",null,[l("Reads formatted input from the file stream "),e("code",null,"fp"),l(", similar to how "),e("code",null,"scanf"),l(" reads from "),e("code",null,"stdin"),l(".")]),e("li",null,[l("Reads data according to the "),e("code",null,"format"),l(" string and stores it in the provided variable addresses.")]),e("li",null,[l("Returns the number of items successfully read, or "),e("code",null,"EOF"),l(" if the end of the file is reached or an error occurs. "),e("strong",null,[l("Checking against "),e("code",null,"EOF"),l(" is essential for loops reading until the end.")])])])]),e("li",null,[e("strong",null,[e("code",null,"fgets(char *str, int size, FILE *fp)"),l(":")]),e("ul",null,[e("li",null,[l("Reads a line of text (up to "),e("code",null,"size - 1"),l(" characters) from the file stream "),e("code",null,"fp"),l(" and stores it into the character array "),e("code",null,"str"),l(".")]),e("li",null,[l("Stops reading after encountering a newline ("),e("code",null,"\\n"),l(") or "),e("code",null,"EOF"),l(", or when "),e("code",null,"size - 1"),l(" characters have been read.")]),e("li",null,[e("strong",null,[l("Safer than "),e("code",null,"gets"),l(" or "),e("code",null,'fscanf("%s", ...)')]),l(" because it includes a size limit, preventing buffer overflows.")]),e("li",null,[l("Automatically adds a null terminator "),e("code",null,"\\0"),l(".")]),e("li",null,[l("Returns "),e("code",null,"str"),l(" on success, "),e("code",null,"NULL"),l(" on end-of-file or error.")])])])],-1)])),_:1},16))}};export{b as default};
