import{b as i,o as s,w as a,g as e,ad as t,v as u,x as c,S as l}from"./modules/vue-CRs45FuU.js";import{I as d}from"./slidev/default-LWAk-HKe.js";import{u as f,f as p}from"./slidev/context-_Uf90lkj.js";import"./index-BSSfb9vy.js";import"./modules/shiki-CvQuTaB8.js";const x={__name:"lect-9.md__slidev_17",setup(m){const{$clicksContext:n,$frontmatter:r}=f();return n.setup(),(b,o)=>(s(),i(d,u(c(l(p)(l(r),16))),{default:a(()=>o[0]||(o[0]=[e("h2",null,"Binary File Operations",-1),e("ul",null,[e("li",null,[t("For reading/writing non-text data (like raw bytes of structs, images, etc.), use "),e("strong",null,"binary modes"),t(" ("),e("code",null,'"rb"'),t(", "),e("code",null,'"wb"'),t(", "),e("code",null,'"ab"'),t(", etc.).")]),e("li",null,[t("Text mode ("),e("code",null,'"r"'),t(", "),e("code",null,'"w"'),t(", "),e("code",null,'"a"'),t(") might perform character translations (e.g., newline conversions) which can corrupt binary data.")]),e("li",null,[t("Use functions like "),e("code",null,"fread()"),t(" and "),e("code",null,"fwrite()"),t(" for binary I/O. "),e("ul",null,[e("li",null,[e("code",null,"fread(void *ptr, size_t size, size_t count, FILE *fp)"),t(": Reads "),e("code",null,"count"),t(" items, each of "),e("code",null,"size"),t(" bytes, from "),e("code",null,"fp"),t(" into the buffer pointed to by "),e("code",null,"ptr"),t(".")]),e("li",null,[e("code",null,"fwrite(const void *ptr, size_t size, size_t count, FILE *fp)"),t(": Writes "),e("code",null,"count"),t(" items, each of "),e("code",null,"size"),t(" bytes, from the buffer "),e("code",null,"ptr"),t(" to "),e("code",null,"fp"),t(".")])])]),e("li",null,"(Detailed usage of binary I/O is often covered in more advanced topics).")],-1)])),_:1},16))}};export{x as default};
